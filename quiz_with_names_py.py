# -*- coding: utf-8 -*-
"""Quiz with names.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FUUWEYdk74U7bZVe9NgERl8JqeAethtv
"""

import pickle

print("Can you understand millennials?")

def get_new_name():
    new_name = input("\nPlease tell me your name: ")
    if new_name in names:
        print("\n%s thanks for visiting us again!" % new_name.title())
    else:
        names.append(new_name)
        print("\nA new quiz taker! welcome welcome!" % new_name.title())

def load_names():
    try:
        file_object = open('names.pkl', 'rb')
        names = pickle.load(file_object)
        file_object.close()
        return names
    except Exception as e:
        print(e)
        return []

def get_user_choice():
    print("\n[1] See other quiz takers")
    print("[2] Try Again")
    print("[3] Leave")
    
    return input("What would you like to do? ")
    
def show_names():
    print("\nHere are the other quiz takers.\n")
    for name in names:
        print(name.title())

def get_new_name():
    new_name = input("\nPlease tell me your name: ")
    names.append(new_name)
    print("\nHave fun in this quiz, %s!\n" % new_name.title())


class Users:
  def __init__(user, name, score):
    user.name = name
    user.score = score

names = load_names()

name = input("Please enter your name: "). title()
  
names.append(name)


class Question:
     def __init__(self, prompt, answer):
          self.prompt = prompt
          self.answer = answer

question_prompts = [
    "1. What does 'periodt' mean?\n(a) End of a sentence\n(b) A normal lifecycle that has been extended\n(c) A more extreme or intense version of 'period'",'\n'
    "2. What does 'snatched' mean?\n(a) Something that was taken away\n(b) Something you say when someone is wearing something fashionable\n(c) The person who is 'the one that got away - TOTGA'",'\n'
    "3.What does 'shade' mean?\n(a) A place to stay away from the sun\n(b) A creepy person you don't like\n(c) A situation where someone illustrated sneaky actions toward someone or something",'\n'
    "4. What does 'Sksksksk' mean?\n(a) A person you are gossiping about\n(b) A versatile filler expression of excitement\n(c) A thing you really wanted to buy",'\n'
    "5. What does 'yeet' mean?\n(a) A situation you want to avoid\n(b) Discarding things quickly\n(c) A more extreme or intense version of 'period'",'\n'
    "6. What does 'tea' mean?\n(a) Your new eye candy\n(b) Your favorite drink\n(c) The latest gossip",'\n'
    "7. What does 'lit' mean?\n(a) Something amazing, exciting, high-energy, or great\n(b) To light something up in a big way\n(c) To always overshadow people with your presence",'\n'
    "8. What does 'salty' mean?\n(a) Garnishing a dish with too much salt\n(b) To be annoyed, upset, or bitter, usually about something minor\n(c) To always be great at the things you do",'\n'
    "9. What does 'shookt' mean?\n(a) Angry, frustrated, irritated\n(b) Shocked, surprised, or scared\n(c) Happy, festive, celebratory",'\n'
    "10. What does 'slay' mean?\n(a) to do really well or succeed at something\n(b) To overkill the enemy in a game\n(c) To kill people with kindness",'\n'
]

questions = [
     Question(question_prompts[0], "c"),
     Question(question_prompts[1], "b"),
    Question(question_prompts[2], "c"),
    Question(question_prompts[3], "b"),
    Question(question_prompts[4], "b"),
    Question(question_prompts[5], "c"),
    Question(question_prompts[6], "a"),
    Question(question_prompts[7], "b"),
    Question(question_prompts[8], "b"),
    Question(question_prompts[9], "a"),
]

def run_quiz(questions):
     scores = []
     score = 0
     for question in questions:
          answer = input(question.prompt)
          if answer == question.answer:
            score += 1
     scores.append(score)

     if (score == 10):
      print("\n{0}, you scored {1} out of {2}. Wow a true millennial!".format(name, score, len(questions)))
     elif (score == 9):
       print("\n{0}, you scored {1} out of {2}. Good job!".format(name, score, len(questions)))
     elif (score>=7):
      print("\n{0}, you scored {1} out of {2}. Just a little more practice".format(name, score, len(questions)))
     else:
       print("\n{0}, you scored {1} out of {2}. Try harder!".format(name, score, len(questions)))
run_quiz(questions)


def get_user_choice():
    print("\n[1] See other quiz takers")
    print("[2] Try Again")
    print("[3] Leave")
    
    return input("What would you like to do? ")
        
def get_new_name():
    new_name = input("\nPlease tell me your name: ")
    names.append(new_name)
    print("\nHave fun in this quiz, %s!\n" % new_name.title())

choice = ''
while choice != 'q':    
    
    choice = get_user_choice()
    
    if choice == '1':
        show_names()
    elif choice == '2':
      print("\nSure, let's try again!\n")
      name = input("Please enter your name: "). title()
      names.append(name)
      run_quiz(questions)
    elif choice == '3':
      print("\n\nHave a nice day! bye!")
      break
    else:
      print("\n\nHave a nice day! bye!")
      break

